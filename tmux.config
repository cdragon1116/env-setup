# remap prefix from 'C-b' to 'C-a'
# unbind C-b
set-option -g prefix C-b
bind-key C-b send-prefix
# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

source-file ~/.tnuxline
bind r source-file ~/.tmux.conf

set -g pane-border-style 'fg=colour244,bg=black'
set -g pane-active-border-style 'fg=colour3,bg=black'

# set -g window-style 'fg=white,bg=black'
# set -g window-active-style 'fg=white,bg=black'


# force a reload of the config file
# reload config file (change file location to your the tmux.conf you want to use)

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# smart pane switching with awareness of vim splits
bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k" "select-pane -U"
bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j" "select-pane -D"
bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h" "select-pane -L"
bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l" "select-pane -R"
bind -n "C-\\" if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-\\" "select-pane -l"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind C-p send-keys "clear && tmux clear-history" \; send-keys "Enter"
# bind -n C-p send-keys -R \
# bind-key C send-keys "clear && tmux clear-history" \; send-keys "Enter"


bind-key -n C-p send-keys C-l \; send-keys -R \; clear-history

# send-keys C-k \; clear-history


# resize pane
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n S-Right resize-pane -R 2
bind -n S-Left resize-pane -L 2


# tmux status bar color
set-option -g status-keys "emacs"
set -g status-left-length 50
set -g status-right " Show Terminal #(date '+%a, %b %d - %I:%M') "

bind c new-window -c "#{pane_current_path}"
set -g base-index 1
set -g renumber-windows on
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"

bind-key b break-pane -d
bind-key C-j choose-tree

set -g mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi v send-keys -X begin-selection

unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
# unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
# unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
